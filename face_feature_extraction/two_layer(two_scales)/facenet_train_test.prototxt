name: "FaceNet"
layers {
  name: "face"
  type: IMAGE_DATA
  top: "data"
  top: "label"
  image_data_param {
    source: "data/face_feature_extraction/train.txt"
    batch_size: 64
    new_height: 128
    new_width: 128
  }
  transform_param {
    #scale: 0.00390625
    #crop_size: 89
    #crop_size: 120
    #mirror: true
  }
  include: { phase: TRAIN }
}

layers {
  name: "face"
  type: IMAGE_DATA
  top: "data"
  top: "label"
  image_data_param {
    source: "data/face_feature_extraction/test.txt"
    batch_size: 64
    new_height: 128
    new_width: 128
  }
  transform_param {
    #scale: 0.00390625
    #crop_size: 89
    #mirror: true
  }
  include: { phase: TEST }
}

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 16
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  name: "face1"
  type: IMAGE_DATA
  top: "data1"
  top: "label1"
  image_data_param {
    source: "data/face_feature_extraction/train.txt"
    batch_size: 64
    new_height: 64
    new_width: 64
  }
  transform_param {
    #scale: 0.00390625
    #crop_size: 89
    #crop_size: 120
    #mirror: true
  }
  include: { phase: TRAIN }
}
layers {
  name: "face1"
  type: IMAGE_DATA
  top: "data1"
  top: "label1"
  image_data_param {
    source: "data/face_feature_extraction/train.txt"
    batch_size: 64
    new_height: 64
    new_width: 64
  }
  transform_param {
    #scale: 0.00390625
    #crop_size: 89
    #mirror: true
  }
  include: { phase: TEST }
}

layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "data1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 8
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layers {
  name: "concat"
  bottom: "pool1"
  bottom: "conv2"
  top: "out1"
  type: CONCAT
  concat_param {
    concat_dim: 1
  }
}

layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "out1"
  top: "conv3"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 24
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layers {
  name: "pool2"
  type: POOLING
  bottom: "conv3"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 4
    stride: 4
  }
}


layers {
  name: "ip1"
  type: INNER_PRODUCT
  bottom: "pool2"
  top: "ip1"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}



layers {
  name: "ip2"
  type: INNER_PRODUCT
  bottom: "ip1"
  top: "ip2"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}

layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "ip2"
  bottom: "label1"
  top: "loss"
}


